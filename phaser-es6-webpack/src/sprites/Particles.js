import Phaser from 'phaser';import Config from '../config';export default class MerryChristmas extends Phaser.Group {  constructor (game) {    super(game);    this.game.doParticles.add(() => {      this.spawnParticles();    })  }  spawnParticles () {    const random1 = Math.floor(Math.random() * 4 + 1)    const random2 = Math.floor(Math.random() * 4 + 1)    for (let i = 0; i < random1; i += 1) {      const particle = new Phaser.Sprite(this.game, Math.random() * 100 + 450, 390, 'particle-cloud');      particle.alpha = 0;      particle.scale.setTo(Math.random() * 0.25 + 0.25)      const tween = this.game.add.tween(particle)        .to({x: particle.x - 50, y: particle.y + (Math.random() - 0.5) * 40}, 1000, null, true)      this.game.add.tween(particle)        .to({alpha: 1}, 300, null, true).yoyo(true)      tween.onComplete.add(() => {        particle.destroy();      });      this.add(particle);    }    for (let i = 0; i < random2; i += 1) {      const particle2 = new Phaser.Sprite(this.game, Math.random() * 100 + 650, 390, 'particle-cloud');      particle2.alpha = 0;      particle2.scale.setTo(Math.random() * 0.25 + 0.25)      const tween2 = this.game.add.tween(particle2)        .to({x: particle2.x + 50, y: particle2.y + (Math.random() - 0.5) * 40}, 1000, null, true)      this.game.add.tween(particle2)        .to({alpha: 1}, 300, null, true).yoyo(true)      tween2.onComplete.add(() => {        particle2.destroy();      });      this.add(particle2);    }  }}