import Phaser from 'phaser';export default class BouncingGifts extends Phaser.Group {  constructor (game, x, y) {    super(game);    this.x = x;    this.y = y;    game.physics.arcade.gravity.y = 200;    this.game = game;    this.gifts = [];    this.buildFloor()    this.buildGifts();  }  buildGifts () {    let y = 0    for (let i = 0; i < 5; i += 1) {      const gift = new Phaser.Sprite(this.game, 0, y, 'present-1');      this.game.physics.arcade.enable(gift);      gift.id = i;      gift.anchor.setTo(0.5, 0.5);      gift.angle = Math.random() * 360      gift.body.velocity.y = 200;      gift.scale.setTo(0.3);      gift.body.bounce.set(0.5, 0.5);      gift.body.allowGravity = true;      gift.body.collideWorldBounds = true;      this.add(gift);      this.gifts.push(gift);      y += Math.random() * 50 + 50;    }    this.arrayCheck = []    for (let i = 0; i < this.gifts.length; i += 1) {      this.arrayCheck.push(0)    }  }  update () {    for (let i = 0; i < this.gifts.length; i += 1) {      this.game.physics.arcade.collide(this.floor, this.gifts[i], this.doAnimation, null, this);    }  }  doAnimation (obj1, obj2) {    if (this.arrayCheck[obj2.id] === 20) {      // setTimeout(() => {      //   obj2.body.enable = false;      //      //   game.add.tween(obj2)      //     .to({      //       angle: 0      //     }, 1000, null, true);      //      //   const yoyo = game.add.tween(obj2)      //     .to({y: obj2.y - 100}, 1000, null, true)      //   yoyo.yoyo(true)      // }, 2500)    }    if (this.arrayCheck[obj2.id] <= 2) {      const factor = Math.pow(2, this.arrayCheck[obj2.id])      // game.add.tween(obj2)      //   .to({      //     x: obj2.x + (Math.random() - 0.5) * 200 / factor,      //   }, 1000 / factor, null, true)      game.add.tween(obj2.scale)        .to({ x: obj2.scale.x + 0.2 / factor,          y: obj2.scale.y + 0.2 / factor,        }, 1000 / factor, null, true)    }    if (this.arrayCheck[obj2.id] === 0) {      game.add.tween(obj2)        .to({          angle: Math.random() > 0.5 ? 360 : -360        }, 2500, Phaser.Easing.Circular.Out, true)      game.add.tween(obj2)        .to({          x: obj2.id % 2 === 0 ? obj2.x + Math.random() * 200 : obj2.x - Math.random() * 200,          angle: Math.random() > 0.5 ? 360 : -360        }, 2500, null, true)    }    this.arrayCheck[obj2.id] += 1;  }  buildFloor () {    this.floor = new Phaser.Sprite(this.game, -this.x, 500, 'chimney');    this.game.physics.arcade.enable(this.floor);    this.floor.body.allowGravity = false;    this.floor.body.immovable = true;    this.floor.body.moves = false;    //this.floor.alpha = 0;    this.add(this.floor)  }}